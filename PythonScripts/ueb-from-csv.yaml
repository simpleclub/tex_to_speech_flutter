# UEB characters
#
# Some chars that originally came from an Excel spreadsheet, converted to csv, and the greatly expanded
# 
# The UEB translation makes use of some non-braille chars as flags
#    L -- what follows is a letter
#    N -- what follows is a digit
#    C -- precedes L for capital letters
#    G -- precedes L for Greek Letters (after C for capitals)
#  Typeface Indicators ("typeforms")
#    B bold, I Italic, S Sans-serif, T script, D, Fraktur, ùîπ blackboard-bold
#    the type face indicators can be combined with B (first) and I (second)
#  Standing alone chars:
#    Any character which acts as a standing alone character (e.g, "{") needs each braille symbol to be labeled
#    o -- opening/left side, c -- closing/right side, b -- both open and close (e.g, '"')

 
 - "=": [t: "‚†ê‚†∂"]               # 0x003D (Equals)
 - "‚â†": [t: "‚†ê‚†∂‚†à‚†±"]             # 0x2260 (Not equal)
 - "<": [t: "‚†à‚†£"]               # 0x003C (Less than)
 - "‚â§": [t: "‚†∏‚†à‚†£"]              # 0x2264 (Less than or equal to)
 - ">": [t: "‚†à‚†ú"]               # 0x003E (Greater than)
 - "‚â•": [t: "‚†∏‚†à‚†ú"]              # 0x2265 (Greater than or equal to)
 - "‚â™": [t: "‚†®‚†à‚†£"]              # 0x226A (Much less than)
 - "‚â´": [t: "‚†®‚†à‚†ú"]              # 0x226B (Much greater than)
 - "‚âÆ": [t: "‚†à‚†£‚†à‚†±"]             # 0x226E (Not less than)
 - "‚âØ": [t: "‚†à‚†ú‚†à‚†±"]             # 0x226F (Not greater than)
 - "‚â∞": [t: "‚†∏‚†à‚†£‚†à‚†±"]            # 0x2270 (Neither less than nor equal to)
 - "‚â±": [t: "‚†∏‚†à‚†ú‚†à‚†±"]            # 0x2271 (Neither greater than nor equal to)
 - "‚àù": [t: "‚†∏‚†ê‚†∂"]              # 0x221D (Proportional to)
 - "‚âÉ": [t: "‚†∏‚†î"]               # 0x2243 (Approximately equal to (tilde over horizontal line))
 - "‚âÖ": [t: "‚†∏‚†î"]               # 0x2245 (Approximately equal to (tilde over equals sign))
 - "‚âà": [t: "‚†ò‚†î"]               # 0x2248 (Approximately equal (tilde over tilde))
 - "‚âè": [t: "‚†ò‚†ê‚†∂"]              # 0x224F (Equals with bump in top bar (difference between))
 - "‚âë": [t: "‚†®‚†ê‚†∂"]              # 0x2251 (Geometrically equal to (equals dotted above and below))
 - "‚â°": [t: "‚†∏‚†ø"]               # 0x2261 (Equivalent to (three horizontal lines))
 - "‚â¢": [t: "‚†∏‚†ø‚†à‚†±"]             # 0x2262 (Not identical to)
 - "‚àà": [t: "‚†ò‚†ë"]               # 0x2208 (Element of (member of))
 - "+": [t: "‚†ê‚†ñ"]               # 0x002B (Plus sign)
 - "‚àí": [t: "‚†ê‚†§"]               # 0x2212 (Minus sign)
 - "¬∑": [t: "‚†ê‚†≤"]               # 0x00D7 (Multiplication dot (times))
 - "√ó": [t: "‚†ê‚†¶"]               # 0x00D7 (Multiplication sign (times))
 - "√∑": [t: "‚†ê‚†å"]               # 0x00F7 (Division sign (divided by))
 - "¬±": [t: "‚†∏‚†ñ"]               # 0x00B1 (Plus or minus)
 - "‚àì": [t: "‚†∏‚†§"]               # 0x2213 (Minus or plus)
 - "‚àó": [t: "‚†ê‚†î"]               # 0x2217 (Asterisk operator)
 - "‚àò": [t: "‚†ê‚†¥"]               # 0x2218 (Ring operator)
 - "‚ó¶": [t: "‚†ê‚†¥"]               # 0x25E6 (White bullet)
 - "‚àº": [t: "‚†à‚†î"]               # 0x223C (Tilde operator)
 - "‚ãÖ": [t: "‚†ê‚†≤"]               # 0x22C5 (Dot operator)
 - "‚àß": [t: "‚†à‚†¶"]               # 0x2227 (Logical and)
 - "‚à®": [t: "‚†à‚†ñ"]               # 0x2228 (Logical or)
 - "‚à©": [t: "‚†®‚†¶"]               # 0x2229 (Intersection)
 - "‚à™": [t: "‚†®‚†ñ"]               # 0x222A (Union)
 - "‚àñ": [t: "‚†∏‚†°"]               # 0x2216 (Set minus)
 - "(": [t: "o‚†êo‚†£"]               # 0x0028 (Left parenthesis)
 - ")": [t: "c‚†êc‚†ú"]               # 0x0029 (Right parenthesis)
 - "[": [t: "o‚†®o‚†£"]               # 0x005B (Left square bracket)
 - "]": [t: "c‚†®c‚†ú"]               # 0x005D (Right square bracket)
 - "{": [t: "o‚†∏o‚†£"]               # 0x007B (Left curly bracket)
 - "}": [t: "c‚†∏c‚†ú"]               # 0x007D (Right curly bracket)
 - "‚å©": [t: "o‚†à‚†£"]               # 0x2329 (Left angle bracket)
 - "‚å™": [t: "c‚†à‚†ú"]               # 0x232A (Right angle bracket)
 - "|": [t: "‚†∏‚†≥"]               # 0x007C (Vertical bar)
 - "!": [t: "c‚†ñ"]                # 0x21 (Exclamation (factorial))
 - "#": [t: "‚†∏‚†π"]               # 0x23 (Number sign (hash))
 - "%": [t: "‚†¥"]                # 0x25 (Percent sign)
 - "&": [t: "‚†à‚†Ø"]               # 0x26 (Ampersand)
 - "*": [t: "‚†ê‚†î"]               # 0x002A (Asterisk)
 - "/": [t: "‚†∏‚†å"]               # 0x002F (Solidus (slash))
 - ";": [t: "1c‚†Ü"]               # 0x003B (Semicolon)
 - "?": [t: "1c‚†¶"]               # 0x003F (Question mark)
 - "@": [t: "‚†à‚†Å"]               # 0x0040 (Commercial at sign)
 - "\\": [t: "‚†∏‚†°"]              # 0x005C (Backslash)
 - "^": [t: "‚†à‚†¢"]               # 0x005E (Caret (hat, up arrow))
 - "_": [t: "‚†®‚†§"]               # 0x005F (Low line (underscore))
 - "~": [t: "‚†à‚†î"]               # 0x007E (Tilde (swung dash))
 - "¬¢": [t: "‚†à‚†â"]               # 0x00A2 (Cents sign)
 - "‚Ç¨": [t: "‚†à‚†ë"]               # 0x20AC (Euro sign)
 - "‚Ç£": [t: "‚†à‚†ã"]               # 0x20A3 (French franc sign)
 - "¬£": [t: "‚†à‚†á"]               # 0x00A3 (Pound sign)
 - "‚Ç¶": [t: "‚†à‚†ù"]               # 0x20A6 (Naira sign)
 - "$": [t: "‚†à‚†é"]               # 0x0024 (Dollar sign)
 - "¬•": [t: "‚†à‚†Ω"]               # 0x00A5 (Yen sign)
 - "¬¶": [t: "‚†®‚†≥"]               # 0x00A6 (Broken bar)
 - "¬¨": [t: "‚†à‚†π"]               # 0x00AC (Not sign)
 - "¬∞": [t: "‚†ò‚†ö"]               # 0x00B0 (Degree sign)
 - "‚Ä†": [t: "‚†à‚††‚†π"]              # 0x2020 (Dagger)
 - "‚Ä°": [t: "‚†à‚††‚†ª"]              # 0x2021 (Double dagger)
 - "‚Ä¶": [t: "c‚†≤c‚†≤c‚†≤"]              # 0x2026 (Ellipsis)
 - "‚Ä≤": [t: "1‚†∂"]                # 0x2032 (Prime sign)
 - "‚Ä≥": [t: "1‚†∂‚†∂"]               # 0x2033 (Double prime sign)
 - "‚Ä¥": [t: "1‚†∂‚†∂‚†∂"]              # 0x2034 (Triple prime sign)
 - "‚Ñ´": [t: "‚††‚†ò‚†´‚†Å"]             # 0x212B (Angstrom symbol)
 - "√Ö": [t: "‚††‚†ò‚†´‚†Å"]             # 0x00C5 (WIRIS uses this for Angstrom)
 - "‚àÄ": [t: "‚†ò‚†Å"]               # 0x2200 (For all)
 - "‚àÇ": [t: "‚†à‚†ô"]               # 0x2202 (Partial differential)
 - "‚àÉ": [t: "‚†ò‚†¢"]               # 0x2203 (There exists)
 - "‚àÑ": [t: "‚†ò‚†¢‚†à‚†±"]             # 0x2204 (There does not exist)
 - "‚àÖ": [t: "‚†à‚†ö"]               # 0x2205 (Empty set)
 - "‚àá": [t: "‚†ò‚†ô"]               # 0x2207 (Nabla (del, inverted capital delta))
 - "‚àé": [t: "‚†∏‚†´‚†º‚†ôt"]            # 0x220E (End of proof)
 - "‚àö": [t: "‚†ê‚†©"]               # 0x221A (Square root (radical) without vinculum)
 - "‚àû": [t: "‚†º‚†ø"]               # 0x221E (Infinity)
 - "‚à†": [t: "‚†∏‚†™"]               # 0x2220 (Angle)
 - "‚à°": [t: "‚†®‚†∏‚†™"]              # 0x2221 (Measured angle)
 - "‚äæ": [t: "‚†º‚†∏‚†™"]              # 0x22BE (Right angle with arc)
 - "‚à´": [t: "1‚†Æ"]               # 0x222B (Integral)
 - "‚àÆ": [t: "‚†à‚†Æ"]               # 0x222E (Contour integral (closed line integral))
 - "‚à¥": [t: "‚††‚†°"]               # 0x2234 (Therefore)
 - "‚àµ": [t: "‚†à‚†å"]               # 0x2235 (Because (since))
 - "‚à∂": [t: "1‚†í"]               # 0x2236 (Ratio)
 - "‚à∑": [t: "1‚†í‚†í"]              # 0x2237 (Proportion)
 - "‚à£": [t: "‚†∏‚†≥"]               # 0x2223 (Divides)
 - "‚à§": [t: "‚†∏‚†≥‚†à‚†±"]             # 0x2224 (Does not divide)
 - "‚à•": [t: "‚†º‚†á"]               # 0x2225 (Parallel)
 - "‚à¶": [t: "‚†º‚†á‚†à‚†±"]             # 0x2226 (Not parallel)
 - "‚üÇ": [t: "‚†º‚†§"]               # 0x27C2 (Perpendicular)
 - "‚ä•": [t: "‚†º‚†§"]               # 0x22A5 (Up tack (perpendicular))
 - "‚ä¶": [t: "‚†∏‚†í"]               # 0x22A6 (Assertion (is a theorem))
 - "‚ä£": [t: "‚†à‚†∏‚†í"]              # 0x22A3 (Left tack (reverse assertion))
 - "‚ä®": [t: "‚†ò‚†∏‚†í"]              # 0x22A8 (TRUE (is valid))
 - "‚ä¨": [t: "‚†∏‚†í‚†à‚†±"]             # 0x22AC (Does not prove)
 - "‚ä≠": [t: "‚†ò‚†∏‚†í‚†à‚†±"]            # 0x22AD (Not TRUE)
 - "‚´§": [t: "‚†®‚†∏‚†í"]              # 0x2AE4 (Vertical bar double left turnstile)
 - "‚úì": [t: "‚†à‚†©"]               # 0x2713 (Check mark (tick))
 - "‚¶µ": [t: "‚†®‚†ö"]               # 0x29B5 (Plimsoll sign (standard state))
 - "‚Üê": [t: "1‚†≥‚†™"]              # 0x2190 (Leftwards arrow)
 - "‚Üë": [t: "1‚†≥‚†¨"]              # 0x2191 (Upwards arrow)
 - "‚Üí": [t: "1‚†≥‚†ï"]              # 0x2192 (Rightwards arrow)
 - "‚Üì": [t: "1‚†≥‚†©"]              # 0x2193 (Downwards arrow)
 - "‚Üî": [t: "1‚†≥‚†∫‚†ó‚†ï"]            # 0x2194 (Left right arrow)
 - "‚Üï": [t: "1‚†≥‚†∫‚†ó‚†¨"]            # 0x2195 (Up down arrow)
 - "‚Üñ": [t: "1‚†≥‚†±"]              # 0x2196 (Northwest arrow)
 - "‚Üó": [t: "1‚†≥‚†é"]              # 0x2197 (Northeast arrow)
 - "‚Üò": [t: "1‚†≥‚†£"]              # 0x2198 (Southeast arrow)
 - "‚Üô": [t: "1‚†≥‚†ú"]              # 0x2199 (Southwest arrow)
 - "‚Üö": [t: "1‚†≥‚†™‚†à‚†±"]            # 0x219A (Leftwards arrow with stroke)
 - "‚Üõ": [t: "1‚†≥‚†ï‚†à‚†±"]            # 0x219B (Rightwards arrow with stroke)
 - "‚Üú": [t: "1‚†≥‚†î‚†¢‚†™"]            # 0x219C (Leftwards wave arrow)
 - "‚Üù": [t: "1‚†≥‚†¢‚†î‚†ï"]            # 0x219D (Rightwards wave arrow)
 - "‚Üû": [t: "1‚†≥‚†í‚†ó‚†ó‚†™"]           # 0x219E (Leftwards two headed arrow)
 - "‚Üü": [t: "1‚†≥‚†í‚†ó‚†ó‚†¨"]           # 0x219F (Upwards two headed arrow)
 - "‚Ü†": [t: "1‚†≥‚†í‚†ó‚†ó‚†ï"]           # 0x21A0 (Rightwards two headed arrow)
 - "‚Ü°": [t: "1‚†≥‚†í‚†ó‚†ó‚†©"]           # 0x21A1 (Downwards two headed arrow)
 - "‚Ü¢": [t: "1‚†≥‚†ó‚†ó‚†™"]            # 0x21A2 (Leftwards arrow with tail)
 - "‚Ü£": [t: "1‚†≥‚†ó‚†ó‚†ï"]            # 0x21A3 (Rightwards arrow with tail)
 - "‚Ü§": [t: "1‚†≥‚†≥‚†ó‚†™"]            # 0x21A4 (Leftwards arrow from bar)
 - "‚Ü•": [t: "1‚†≥‚†≥‚†ó‚†¨"]            # 0x21A5 (Upwards arrow from bar)
 - "‚Ü¶": [t: "1‚†≥‚†≥‚†ó‚†ï"]            # 0x21A6 (Rightwards arrow from bar)
 - "‚Üß": [t: "1‚†≥‚†≥‚†ó‚†©"]            # 0x21A7 (Downwards arrow from bar)
 - "‚Ü≠": [t: "1‚†≥‚†∫‚†î‚†¢‚†ó‚†ï"]          # 0x21AD (Left right wave arrow)
 - "‚ÜÆ": [t: "1‚†≥‚†∫‚†ó‚†ï‚†à‚†±"]          # 0x21AE (Left right arrow with stroke)
 - "‚Ü∞": [t: "1‚†≥‚†¥‚†¨"]             # 0x21B0 (Upwards arrow with tip left)
 - "‚Ü±": [t: "1‚†≥‚†≤‚†¨"]             # 0x21B1 (Upwards arrow with tip right)
 - "‚Ü≤": [t: "1‚†≥‚†≤‚†©"]             # 0x21B2 (Downwards arrow with tip left)
 - "‚Ü≥": [t: "1‚†≥‚†¥‚†©"]             # 0x21B3 (Downwards arrow with tip right)
 - "‚Ü∂": [t: "1‚†≥‚†î‚†î‚†™"]            # 0x21B6 (Anticlockwise top semicircle arrow)
 - "‚Ü∑": [t: "1‚†≥‚†¢‚†¢‚†ï"]            # 0x21B7 (Clockwise top semicircle arrow)
 - "‚Üº": [t: "1‚†≥‚†à‚†ó‚†™"]            # 0x21BC (Leftwards harpoon with barb upwards)
 - "‚ÜΩ": [t: "1‚†≥‚††‚†ó‚†™"]            # 0x21BD (Leftwards harpoon with barb downwards)
 - "‚Üæ": [t: "1‚†≥‚††‚†ó‚†¨"]            # 0x21BE (Upwards harpoon with barb rightwards)
 - "‚Üø": [t: "1‚†≥‚†à‚†ó‚†¨"]            # 0x21BF (Upwards harpoon with barb leftwards)
 - "‚áÄ": [t: "1‚†≥‚†à‚†ó‚†ï"]            # 0x21C0 (Rightwards harpoon with barb upwards)
 - "‚áÅ": [t: "1‚†≥‚††‚†ó‚†ï"]            # 0x21C1 (Rightwards harpoon with barb downwards)
 - "‚áÇ": [t: "1‚†≥‚†à‚†ó‚†©"]            # 0x21C2 (Downwards harpoon with barb rightwards)
 - "‚áÉ": [t: "1‚†≥‚††‚†ó‚†©"]            # 0x21C3 (Downwards harpoon with barb leftwards)
 - "‚áÑ": [t: "1‚†≥‚†ï‚†ª‚†≥‚†™"]           # 0x21C4 (Rightwards arrow over leftwards arrow)
 - "‚áÖ": [t: "1‚†≥‚†¨‚†ø‚†≥‚†©"]           # 0x21C5 (Upwards arrow left of Downwards arrow)
 - "‚áå": [t: "‚†ò‚†∏‚†∂"]              # 0x21CC (Rightwards harpoon over leftwards harpoon (equilibrium))
 - "‚áê": [t: "1‚†≥‚†∂‚†™"]             # 0x21D0 (Leftwards double arrow)
 - "‚áë": [t: "1‚†≥‚†∂‚†¨"]             # 0x21D1 (Upwards double arrow)
 - "‚áí": [t: "1‚†≥‚†∂‚†ï"]             # 0x21D2 (Rightwards double arrow)
 - "‚áì": [t: "1‚†≥‚†∂‚†©"]             # 0x21D3 (Downwards double arrow)
 - "‚áî": [t: "1‚†≥‚†∫‚†∂‚†ó‚†ï"]           # 0x21D4 (Left right double arrow)
 - "‚áï": [t: "1‚†≥‚†∫‚†∂‚†ó‚†¨"]           # 0x21D5 (Up down double arrow)
 - "‚á†": [t: "1‚†≥‚†Ç‚†™"]             # 0x21E0 (Leftwards dashed arrow)
 - "‚á°": [t: "1‚†≥‚†Ç‚†¨"]             # 0x21E1 (Upwards dashed arrow)
 - "‚á¢": [t: "1‚†≥‚†Ç‚†ï"]             # 0x21E2 (Rightwards dashed arrow)
 - "‚á£": [t: "1‚†≥‚†Ç‚†©"]             # 0x21E3 (Downwards dashed arrow)
 - "‚üµ": [t: "1‚†≥‚†í‚†í‚†í‚†™"]           # 0x27F5 (Long leftwards arrow)
 - "‚ü∂": [t: "1‚†≥‚†í‚†í‚†í‚†ï"]           # 0x27F6 (Long rightwards arrow)
 - "‚•Ç": [t: "‚†∏‚†∂"]               # 0x2942 (Rightwards arrow above short leftwards arrow (equilibrium, trend to the right))
 - "‚•Ñ": [t: "‚†à‚†∏‚†∂"]              # 0x2944 (Short rightwards arrow above leftwards arrow (equilibrium, trend to the left))
 - "‚ñ≥": [t: "1‚†´‚†º‚†ât"]            # 0x25B3 (Triangle)
 - "‚ñ°": [t: "1‚†´‚†º‚†ôt"]            # 0x25A1 (Square)
 - "‚ñ§": [t: "‚†®‚†´‚†º‚†ôt"]            # 0x25A4 (Square with horizontal fill)
 - "‚ñ•": [t: "‚†®‚†´‚†º‚†ôt"]            # 0x25A5 (Square with vertical fill)
 - "‚ñ¶": [t: "‚†®‚†´‚†º‚†ôt"]            # 0x25A6 (Square with orthogonal crosshatch fill)
 - "‚ñß": [t: "‚†®‚†´‚†º‚†ôt"]            # 0x25A7 (Square with upper left to lower right fill)
 - "‚ñ®": [t: "‚†®‚†´‚†º‚†ôt"]            # 0x25A8 (Square with upper right to lower left fill)
 - "‚ñ©": [t: "‚†®‚†´‚†º‚†ôt"]            # 0x25A9 (Square with diagonal crosshatch fill)
 - "‚óã": [t: "1‚†´‚†øt"]             # 0x25CB (Circle)
 - "‚óç": [t: "‚†®‚†´‚†øt"]             # 0x25CD (Circle with vertical fill)
 - "‚ñ±": [t: "1‚†´‚†à‚†º‚†ôt"]           # 0x25B1 (Parallelogram)
 - "‚ñ≤": [t: "‚†∏‚†´‚†º‚†ât"]            # 0x25B2 (Filled triangle)
 - "‚ñ†": [t: "‚†∏‚†´‚†º‚†ôt"]            # 0x25A0 (Filled square)
 - "‚âú": [t: "‚††‚†®‚†ô‚†ª‚†ê‚†∂"]           # 0x225C (Delta equal to)
 - "‚âù": [t: "1‚†£‚†ô‚†ë‚†ã‚†ú‚†ª‚†ê‚†∂"]        # 0x225D (Equal to by definition)
 - "‚äï": [t: "1‚†´‚†ø‚†™‚†ê‚†ñt"]          # 0x2295 (Circled plus)
 - "‚äñ": [t: "1‚†´‚†ø‚†™‚†ê‚†§t"]          # 0x2296 (Circled minus)
 - "‚äó": [t: "1‚†´‚†ø‚†™‚†ê‚†¶t"]          # 0x2297 (Circled times)
 - "‚äõ": [t: "1‚†´‚†ø‚†™‚†ê‚†ît"]          # 0x229B (Circled asterisk operator)
 - "‚äû": [t: "1‚†´‚†º‚†ô‚†™‚†ê‚†ñt"]         # 0x229E (Squared plus)
 - "‚äü": [t: "1‚†´‚†º‚†ô‚†™‚†ê‚†§t"]         # 0x229F (Squared minus)
 - "‚ä†": [t: "1‚†´‚†º‚†ô‚†™‚†ê‚†¶t"]         # 0x22A0 (Squared times)
 - "‚ãá": [t: "1‚†å‚†Ø‚†¶"]             # 0x22C7 (Division times)
 - "‚ä©": [t: "‚†∏‚†≥‚†ø‚†∏‚†í"]            # 0x22A9 (Forces)
 - "Àô": [t: "1‚†≤"]               # 0x02D9 ( Dot Above)
 - "¬®": [t: "1‚†≤‚†≤"]              # 0x00A8 ( Double Dot Above)
 - "¬©": [t: "‚†ò‚†â"]               # 0xa9 (Copyright)

 - "\"": [t: "b‚††b‚†∂"]
 - "'": [t: "b‚†Ñ"]
 - "‚Äú": [t: "o‚†òo‚†¶"]
 - "‚Äù": [t: "c‚†òc‚†¥"]
 - "‚Äò": [t: "o‚††o‚†¶"]
 - "‚Äô": [t: "c‚††c‚†¥"]
 - "¬´": [t: "o‚†∏o‚†¶"]
 - "¬ª": [t: "c‚†∏c‚†¥"]

 - " ":                        # 0x20 (Space)
     - test:
        if: "self::m:mn"
        then: [t: "N‚†ê"]
        else: [t: "W"]
 - "¬†":                        # 0xa0 (Non-breaking Space)
     - test:
        - if: "self::m:mn"
          then: [t: "N‚†ê"]
        - else_if: "following-sibling::*[1][@class='MathML-unit' or BaseNode(.)[@class='MathML-unit']]"
          then: [t: "ùêñ"]
          else: [t: "W"]
 - ",":                        # 0x2c (Comma)
     - test:
        if: "self::m:mn"
        then: [t: "N‚†Ç"]
        else: [t: "c,"]
 - ".":                        # 0x2e (Period)
     - test:
        if: "self::m:mn"
        then: [t: "N‚†≤"]
        else: [t: "c."]
 - ":":                         # 0x003A (Colon)
        # Sometimes a colon is meant to be a ratio/mathord and sometimes a map/punct.
        # The latter has a space after it.
        # If in an mrow, guess it is infix and checks the operator. This is pretty weak!
        # Field extensions "[K:F]" and trilinear coordinates "a:b:c" don't want extra space
        # Time doesn't want an extra space -- the am/pm get wrapped in an mrow with the minutes after the colon
    - test:
        if:
        - "IsBracketed(ancestor::*[2], '[', ']') or "       # field extension
        - "preceding-sibling::*[2][text()=':'] or following-sibling::*[2][text()=':'] or"  # trilinear form
          # ratios tend to have similar left and right sides
        - "name(preceding-sibling::*[1]) = name(following-sibling::*[1]) or"
          # am/pm test
        - "(name(preceding-sibling::*[1]) = 'mn' and "
        - "  following-sibling::*[1][self::m:mrow and count(*)=3 and *[1][self::m:mn] and "
        - "     *[3][translate(., 'APM\u00A0', 'apm') = 'am' or translate(., 'APM\u00A0', 'apm') = 'pm']"
        - " ])"
        then: [t: "1c‚†í"]
        else: [t: "1c‚†íW"]

 - "-":                        # 0x2d (Minus sign or hyphen)
     - test:
        if: "self::m:mo"
        then: [t: "‚†ê‚†§"]
        else: [t: "‚†§"]

 - "‚Å°":                          # 0x2061‚Å° (invisible function apply)
    - test:
        if:
        - "preceding-sibling::*[1][self::m:mi and substring(., string-length(.), 1)!='¬†'] and " # avoid scripted function names and one that end with spaces
        - "following-sibling::*[1][self::m:mi and translate(., 'abcdefghijklmnopqrstuvwxyz', '') = '']" # GTM 9.3.2
        then: [t: "W"]
        else: [t: ""]

 - "‚Å¢":                         # 0x2062 (invisible times)
    - test:
        if: # GTM 9.3.3 (not very clear in rule, but the function name has to start with a lower case latin char ['no indicators'])
        - "parent::m:mrow and "
        - "preceding-sibling::*[1]["
        - "           (self::m:mi and translate(., 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', '') = '') or "
        - "           (self::m:mrow and translate(*[last()], 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', '') = '')] and"
        - "  following::*[1][self::m:mrow and count(*)=3 and "   # look for function apply
        - "     *[2][text()='‚Å°'] and *[1][self::m:mi and translate(., 'abcdefghijklmnopqrstuvwxyz', '') = '']]" 
        then: [t: "W"]
        else: [t: ""]
 - "‚Å£": [t: ""]                 # 0x2063‚Å° (invisible separator)
 - "‚Å§": [t: ""]                 # 0x2064 (invisible plus)
